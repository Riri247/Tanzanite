//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FRONTEND.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysUser", Namespace="http://schemas.datacontract.org/2004/07/RentEase_Service")]
    [System.SerializableAttribute()]
    public partial class SysUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string U_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U_Name {
            get {
                return this.U_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.U_NameField, value) != true)) {
                    this.U_NameField = value;
                    this.RaisePropertyChanged("U_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Type {
            get {
                return this.User_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.User_TypeField, value) != true)) {
                    this.User_TypeField = value;
                    this.RaisePropertyChanged("User_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysProduct", Namespace="http://schemas.datacontract.org/2004/07/RentEase_Service")]
    [System.SerializableAttribute()]
    public partial class SysProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Image_URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int M_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Registration_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Rental_AgreementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Decript {
            get {
                return this.DecriptField;
            }
            set {
                if ((object.ReferenceEquals(this.DecriptField, value) != true)) {
                    this.DecriptField = value;
                    this.RaisePropertyChanged("Decript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image_URL {
            get {
                return this.Image_URLField;
            }
            set {
                if ((object.ReferenceEquals(this.Image_URLField, value) != true)) {
                    this.Image_URLField = value;
                    this.RaisePropertyChanged("Image_URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int M_ID {
            get {
                return this.M_IDField;
            }
            set {
                if ((this.M_IDField.Equals(value) != true)) {
                    this.M_IDField = value;
                    this.RaisePropertyChanged("M_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Name {
            get {
                return this.Product_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_NameField, value) != true)) {
                    this.Product_NameField = value;
                    this.RaisePropertyChanged("Product_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Registration_Date {
            get {
                return this.Registration_DateField;
            }
            set {
                if ((this.Registration_DateField.Equals(value) != true)) {
                    this.Registration_DateField = value;
                    this.RaisePropertyChanged("Registration_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rental_Agreement {
            get {
                return this.Rental_AgreementField;
            }
            set {
                if ((object.ReferenceEquals(this.Rental_AgreementField, value) != true)) {
                    this.Rental_AgreementField = value;
                    this.RaisePropertyChanged("Rental_Agreement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartProductWrapper", Namespace="http://schemas.datacontract.org/2004/07/RentEase_Service")]
    [System.SerializableAttribute()]
    public partial class CartProductWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FRONTEND.ServiceReference1.SysShopping_Cart cartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FRONTEND.ServiceReference1.SysProduct productField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FRONTEND.ServiceReference1.SysShopping_Cart cart {
            get {
                return this.cartField;
            }
            set {
                if ((object.ReferenceEquals(this.cartField, value) != true)) {
                    this.cartField = value;
                    this.RaisePropertyChanged("cart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FRONTEND.ServiceReference1.SysProduct product {
            get {
                return this.productField;
            }
            set {
                if ((object.ReferenceEquals(this.productField, value) != true)) {
                    this.productField = value;
                    this.RaisePropertyChanged("product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysShopping_Cart", Namespace="http://schemas.datacontract.org/2004/07/RentEase_Service")]
    [System.SerializableAttribute()]
    public partial class SysShopping_Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C_ID {
            get {
                return this.C_IDField;
            }
            set {
                if ((this.C_IDField.Equals(value) != true)) {
                    this.C_IDField = value;
                    this.RaisePropertyChanged("C_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_ID {
            get {
                return this.P_IDField;
            }
            set {
                if ((this.P_IDField.Equals(value) != true)) {
                    this.P_IDField = value;
                    this.RaisePropertyChanged("P_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysReview", Namespace="http://schemas.datacontract.org/2004/07/RentEase_Service")]
    [System.SerializableAttribute()]
    public partial class SysReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Invoice_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Review1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Star_RatngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice_ID {
            get {
                return this.Invoice_IDField;
            }
            set {
                if ((this.Invoice_IDField.Equals(value) != true)) {
                    this.Invoice_IDField = value;
                    this.RaisePropertyChanged("Invoice_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_ID {
            get {
                return this.Product_IDField;
            }
            set {
                if ((this.Product_IDField.Equals(value) != true)) {
                    this.Product_IDField = value;
                    this.RaisePropertyChanged("Product_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Review1 {
            get {
                return this.Review1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Review1Field, value) != true)) {
                    this.Review1Field = value;
                    this.RaisePropertyChanged("Review1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Star_Ratng {
            get {
                return this.Star_RatngField;
            }
            set {
                if ((this.Star_RatngField.Equals(value) != true)) {
                    this.Star_RatngField = value;
                    this.RaisePropertyChanged("Star_Ratng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetInvoice", Namespace="http://schemas.datacontract.org/2004/07/RentEase_Service")]
    [System.SerializableAttribute()]
    public partial class GetInvoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal INvPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime invDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int invIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal INvPrice {
            get {
                return this.INvPriceField;
            }
            set {
                if ((this.INvPriceField.Equals(value) != true)) {
                    this.INvPriceField = value;
                    this.RaisePropertyChanged("INvPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime invDate {
            get {
                return this.invDateField;
            }
            set {
                if ((this.invDateField.Equals(value) != true)) {
                    this.invDateField = value;
                    this.RaisePropertyChanged("invDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int invID {
            get {
                return this.invIDField;
            }
            set {
                if ((this.invIDField.Equals(value) != true)) {
                    this.invIDField = value;
                    this.RaisePropertyChanged("invID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRentEase")]
    public interface IRentEase {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/Login", ReplyAction="http://tempuri.org/IRentEase/LoginResponse")]
        FRONTEND.ServiceReference1.SysUser Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/Login", ReplyAction="http://tempuri.org/IRentEase/LoginResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysUser> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/Register", ReplyAction="http://tempuri.org/IRentEase/RegisterResponse")]
        bool Register(string email, string password, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/Register", ReplyAction="http://tempuri.org/IRentEase/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string email, string password, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getProduct", ReplyAction="http://tempuri.org/IRentEase/getProductResponse")]
        FRONTEND.ServiceReference1.SysProduct getProduct(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getProduct", ReplyAction="http://tempuri.org/IRentEase/getProductResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct> getProductAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getProducts", ReplyAction="http://tempuri.org/IRentEase/getProductsResponse")]
        FRONTEND.ServiceReference1.SysProduct[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getProducts", ReplyAction="http://tempuri.org/IRentEase/getProductsResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/addToCart", ReplyAction="http://tempuri.org/IRentEase/addToCartResponse")]
        bool addToCart(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/addToCart", ReplyAction="http://tempuri.org/IRentEase/addToCartResponse")]
        System.Threading.Tasks.Task<bool> addToCartAsync(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/removeFromCart", ReplyAction="http://tempuri.org/IRentEase/removeFromCartResponse")]
        bool removeFromCart(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/removeFromCart", ReplyAction="http://tempuri.org/IRentEase/removeFromCartResponse")]
        System.Threading.Tasks.Task<bool> removeFromCartAsync(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getUserCart", ReplyAction="http://tempuri.org/IRentEase/getUserCartResponse")]
        FRONTEND.ServiceReference1.CartProductWrapper[] getUserCart(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getUserCart", ReplyAction="http://tempuri.org/IRentEase/getUserCartResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.CartProductWrapper[]> getUserCartAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getUser", ReplyAction="http://tempuri.org/IRentEase/getUserResponse")]
        FRONTEND.ServiceReference1.SysUser getUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getUser", ReplyAction="http://tempuri.org/IRentEase/getUserResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysUser> getUserAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changePassword", ReplyAction="http://tempuri.org/IRentEase/changePasswordResponse")]
        bool changePassword(int ID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changePassword", ReplyAction="http://tempuri.org/IRentEase/changePasswordResponse")]
        System.Threading.Tasks.Task<bool> changePasswordAsync(int ID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/AddProduct", ReplyAction="http://tempuri.org/IRentEase/AddProductResponse")]
        int AddProduct(string name, string description, int quantity, decimal price, int merchantID, string[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/AddProduct", ReplyAction="http://tempuri.org/IRentEase/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(string name, string description, int quantity, decimal price, int merchantID, string[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/EditProduct", ReplyAction="http://tempuri.org/IRentEase/EditProductResponse")]
        bool EditProduct(int ProductID, string name, string description, int quantity, decimal price, int merchantID, string[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/EditProduct", ReplyAction="http://tempuri.org/IRentEase/EditProductResponse")]
        System.Threading.Tasks.Task<bool> EditProductAsync(int ProductID, string name, string description, int quantity, decimal price, int merchantID, string[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changeQuantity", ReplyAction="http://tempuri.org/IRentEase/changeQuantityResponse")]
        bool changeQuantity(int ID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changeQuantity", ReplyAction="http://tempuri.org/IRentEase/changeQuantityResponse")]
        System.Threading.Tasks.Task<bool> changeQuantityAsync(int ID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changeDescription", ReplyAction="http://tempuri.org/IRentEase/changeDescriptionResponse")]
        bool changeDescription(int ID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changeDescription", ReplyAction="http://tempuri.org/IRentEase/changeDescriptionResponse")]
        System.Threading.Tasks.Task<bool> changeDescriptionAsync(int ID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changePrice", ReplyAction="http://tempuri.org/IRentEase/changePriceResponse")]
        bool changePrice(int ID, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changePrice", ReplyAction="http://tempuri.org/IRentEase/changePriceResponse")]
        System.Threading.Tasks.Task<bool> changePriceAsync(int ID, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changeName", ReplyAction="http://tempuri.org/IRentEase/changeNameResponse")]
        bool changeName(int ID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/changeName", ReplyAction="http://tempuri.org/IRentEase/changeNameResponse")]
        System.Threading.Tasks.Task<bool> changeNameAsync(int ID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/removeProduct", ReplyAction="http://tempuri.org/IRentEase/removeProductResponse")]
        bool removeProduct(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/removeProduct", ReplyAction="http://tempuri.org/IRentEase/removeProductResponse")]
        System.Threading.Tasks.Task<bool> removeProductAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/placeOrder", ReplyAction="http://tempuri.org/IRentEase/placeOrderResponse")]
        int placeOrder(int ID, FRONTEND.ServiceReference1.SysShopping_Cart[] cart, int[] arrDurations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/placeOrder", ReplyAction="http://tempuri.org/IRentEase/placeOrderResponse")]
        System.Threading.Tasks.Task<int> placeOrderAsync(int ID, FRONTEND.ServiceReference1.SysShopping_Cart[] cart, int[] arrDurations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/rateProduct", ReplyAction="http://tempuri.org/IRentEase/rateProductResponse")]
        bool rateProduct(int InvoiceID, int ProductID, int stars, string review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/rateProduct", ReplyAction="http://tempuri.org/IRentEase/rateProductResponse")]
        System.Threading.Tasks.Task<bool> rateProductAsync(int InvoiceID, int ProductID, int stars, string review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getInvoiceID", ReplyAction="http://tempuri.org/IRentEase/getInvoiceIDResponse")]
        int getInvoiceID(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getInvoiceID", ReplyAction="http://tempuri.org/IRentEase/getInvoiceIDResponse")]
        System.Threading.Tasks.Task<int> getInvoiceIDAsync(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/deactivateProduct", ReplyAction="http://tempuri.org/IRentEase/deactivateProductResponse")]
        bool deactivateProduct(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/deactivateProduct", ReplyAction="http://tempuri.org/IRentEase/deactivateProductResponse")]
        System.Threading.Tasks.Task<bool> deactivateProductAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getReview", ReplyAction="http://tempuri.org/IRentEase/getReviewResponse")]
        FRONTEND.ServiceReference1.SysReview getReview(int UserID, int InvoiceID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getReview", ReplyAction="http://tempuri.org/IRentEase/getReviewResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysReview> getReviewAsync(int UserID, int InvoiceID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getAllReviews", ReplyAction="http://tempuri.org/IRentEase/getAllReviewsResponse")]
        FRONTEND.ServiceReference1.SysReview[] getAllReviews(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getAllReviews", ReplyAction="http://tempuri.org/IRentEase/getAllReviewsResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysReview[]> getAllReviewsAsync(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getBestProds", ReplyAction="http://tempuri.org/IRentEase/getBestProdsResponse")]
        FRONTEND.ServiceReference1.SysProduct[] getBestProds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getBestProds", ReplyAction="http://tempuri.org/IRentEase/getBestProdsResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> getBestProdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getNewProds", ReplyAction="http://tempuri.org/IRentEase/getNewProdsResponse")]
        FRONTEND.ServiceReference1.SysProduct[] getNewProds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getNewProds", ReplyAction="http://tempuri.org/IRentEase/getNewProdsResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> getNewProdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getUserInvoices", ReplyAction="http://tempuri.org/IRentEase/getUserInvoicesResponse")]
        FRONTEND.ServiceReference1.GetInvoice[] getUserInvoices(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/getUserInvoices", ReplyAction="http://tempuri.org/IRentEase/getUserInvoicesResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.GetInvoice[]> getUserInvoicesAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/EditUserData", ReplyAction="http://tempuri.org/IRentEase/EditUserDataResponse")]
        void EditUserData(FRONTEND.ServiceReference1.SysUser OneUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/EditUserData", ReplyAction="http://tempuri.org/IRentEase/EditUserDataResponse")]
        System.Threading.Tasks.Task EditUserDataAsync(FRONTEND.ServiceReference1.SysUser OneUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/GetAllusers", ReplyAction="http://tempuri.org/IRentEase/GetAllusersResponse")]
        FRONTEND.ServiceReference1.SysUser[] GetAllusers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/GetAllusers", ReplyAction="http://tempuri.org/IRentEase/GetAllusersResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysUser[]> GetAllusersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/HasBoughtProduct", ReplyAction="http://tempuri.org/IRentEase/HasBoughtProductResponse")]
        bool HasBoughtProduct(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/HasBoughtProduct", ReplyAction="http://tempuri.org/IRentEase/HasBoughtProductResponse")]
        System.Threading.Tasks.Task<bool> HasBoughtProductAsync(int UserID, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/GetMerchantProds", ReplyAction="http://tempuri.org/IRentEase/GetMerchantProdsResponse")]
        FRONTEND.ServiceReference1.SysProduct[] GetMerchantProds(int MerchatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/GetMerchantProds", ReplyAction="http://tempuri.org/IRentEase/GetMerchantProdsResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> GetMerchantProdsAsync(int MerchatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/GetSortedProducts", ReplyAction="http://tempuri.org/IRentEase/GetSortedProductsResponse")]
        FRONTEND.ServiceReference1.SysProduct[] GetSortedProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentEase/GetSortedProducts", ReplyAction="http://tempuri.org/IRentEase/GetSortedProductsResponse")]
        System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> GetSortedProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentEaseChannel : FRONTEND.ServiceReference1.IRentEase, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentEaseClient : System.ServiceModel.ClientBase<FRONTEND.ServiceReference1.IRentEase>, FRONTEND.ServiceReference1.IRentEase {
        
        public RentEaseClient() {
        }
        
        public RentEaseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentEaseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentEaseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentEaseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FRONTEND.ServiceReference1.SysUser Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysUser> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public bool Register(string email, string password, string name, string surname) {
            return base.Channel.Register(email, password, name, surname);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string email, string password, string name, string surname) {
            return base.Channel.RegisterAsync(email, password, name, surname);
        }
        
        public FRONTEND.ServiceReference1.SysProduct getProduct(int ID) {
            return base.Channel.getProduct(ID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct> getProductAsync(int ID) {
            return base.Channel.getProductAsync(ID);
        }
        
        public FRONTEND.ServiceReference1.SysProduct[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public bool addToCart(int UserID, int ProductID) {
            return base.Channel.addToCart(UserID, ProductID);
        }
        
        public System.Threading.Tasks.Task<bool> addToCartAsync(int UserID, int ProductID) {
            return base.Channel.addToCartAsync(UserID, ProductID);
        }
        
        public bool removeFromCart(int UserID, int ProductID) {
            return base.Channel.removeFromCart(UserID, ProductID);
        }
        
        public System.Threading.Tasks.Task<bool> removeFromCartAsync(int UserID, int ProductID) {
            return base.Channel.removeFromCartAsync(UserID, ProductID);
        }
        
        public FRONTEND.ServiceReference1.CartProductWrapper[] getUserCart(int ID) {
            return base.Channel.getUserCart(ID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.CartProductWrapper[]> getUserCartAsync(int ID) {
            return base.Channel.getUserCartAsync(ID);
        }
        
        public FRONTEND.ServiceReference1.SysUser getUser(int ID) {
            return base.Channel.getUser(ID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysUser> getUserAsync(int ID) {
            return base.Channel.getUserAsync(ID);
        }
        
        public bool changePassword(int ID, string password) {
            return base.Channel.changePassword(ID, password);
        }
        
        public System.Threading.Tasks.Task<bool> changePasswordAsync(int ID, string password) {
            return base.Channel.changePasswordAsync(ID, password);
        }
        
        public int AddProduct(string name, string description, int quantity, decimal price, int merchantID, string[] images) {
            return base.Channel.AddProduct(name, description, quantity, price, merchantID, images);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(string name, string description, int quantity, decimal price, int merchantID, string[] images) {
            return base.Channel.AddProductAsync(name, description, quantity, price, merchantID, images);
        }
        
        public bool EditProduct(int ProductID, string name, string description, int quantity, decimal price, int merchantID, string[] images) {
            return base.Channel.EditProduct(ProductID, name, description, quantity, price, merchantID, images);
        }
        
        public System.Threading.Tasks.Task<bool> EditProductAsync(int ProductID, string name, string description, int quantity, decimal price, int merchantID, string[] images) {
            return base.Channel.EditProductAsync(ProductID, name, description, quantity, price, merchantID, images);
        }
        
        public bool changeQuantity(int ID, int quantity) {
            return base.Channel.changeQuantity(ID, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> changeQuantityAsync(int ID, int quantity) {
            return base.Channel.changeQuantityAsync(ID, quantity);
        }
        
        public bool changeDescription(int ID, string description) {
            return base.Channel.changeDescription(ID, description);
        }
        
        public System.Threading.Tasks.Task<bool> changeDescriptionAsync(int ID, string description) {
            return base.Channel.changeDescriptionAsync(ID, description);
        }
        
        public bool changePrice(int ID, double price) {
            return base.Channel.changePrice(ID, price);
        }
        
        public System.Threading.Tasks.Task<bool> changePriceAsync(int ID, double price) {
            return base.Channel.changePriceAsync(ID, price);
        }
        
        public bool changeName(int ID, string name) {
            return base.Channel.changeName(ID, name);
        }
        
        public System.Threading.Tasks.Task<bool> changeNameAsync(int ID, string name) {
            return base.Channel.changeNameAsync(ID, name);
        }
        
        public bool removeProduct(int ID) {
            return base.Channel.removeProduct(ID);
        }
        
        public System.Threading.Tasks.Task<bool> removeProductAsync(int ID) {
            return base.Channel.removeProductAsync(ID);
        }
        
        public int placeOrder(int ID, FRONTEND.ServiceReference1.SysShopping_Cart[] cart, int[] arrDurations) {
            return base.Channel.placeOrder(ID, cart, arrDurations);
        }
        
        public System.Threading.Tasks.Task<int> placeOrderAsync(int ID, FRONTEND.ServiceReference1.SysShopping_Cart[] cart, int[] arrDurations) {
            return base.Channel.placeOrderAsync(ID, cart, arrDurations);
        }
        
        public bool rateProduct(int InvoiceID, int ProductID, int stars, string review) {
            return base.Channel.rateProduct(InvoiceID, ProductID, stars, review);
        }
        
        public System.Threading.Tasks.Task<bool> rateProductAsync(int InvoiceID, int ProductID, int stars, string review) {
            return base.Channel.rateProductAsync(InvoiceID, ProductID, stars, review);
        }
        
        public int getInvoiceID(int UserID, int ProductID) {
            return base.Channel.getInvoiceID(UserID, ProductID);
        }
        
        public System.Threading.Tasks.Task<int> getInvoiceIDAsync(int UserID, int ProductID) {
            return base.Channel.getInvoiceIDAsync(UserID, ProductID);
        }
        
        public bool deactivateProduct(int ID) {
            return base.Channel.deactivateProduct(ID);
        }
        
        public System.Threading.Tasks.Task<bool> deactivateProductAsync(int ID) {
            return base.Channel.deactivateProductAsync(ID);
        }
        
        public FRONTEND.ServiceReference1.SysReview getReview(int UserID, int InvoiceID, int ProductID) {
            return base.Channel.getReview(UserID, InvoiceID, ProductID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysReview> getReviewAsync(int UserID, int InvoiceID, int ProductID) {
            return base.Channel.getReviewAsync(UserID, InvoiceID, ProductID);
        }
        
        public FRONTEND.ServiceReference1.SysReview[] getAllReviews(int ProductID) {
            return base.Channel.getAllReviews(ProductID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysReview[]> getAllReviewsAsync(int ProductID) {
            return base.Channel.getAllReviewsAsync(ProductID);
        }
        
        public FRONTEND.ServiceReference1.SysProduct[] getBestProds() {
            return base.Channel.getBestProds();
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> getBestProdsAsync() {
            return base.Channel.getBestProdsAsync();
        }
        
        public FRONTEND.ServiceReference1.SysProduct[] getNewProds() {
            return base.Channel.getNewProds();
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> getNewProdsAsync() {
            return base.Channel.getNewProdsAsync();
        }
        
        public FRONTEND.ServiceReference1.GetInvoice[] getUserInvoices(int UserID) {
            return base.Channel.getUserInvoices(UserID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.GetInvoice[]> getUserInvoicesAsync(int UserID) {
            return base.Channel.getUserInvoicesAsync(UserID);
        }
        
        public void EditUserData(FRONTEND.ServiceReference1.SysUser OneUser) {
            base.Channel.EditUserData(OneUser);
        }
        
        public System.Threading.Tasks.Task EditUserDataAsync(FRONTEND.ServiceReference1.SysUser OneUser) {
            return base.Channel.EditUserDataAsync(OneUser);
        }
        
        public FRONTEND.ServiceReference1.SysUser[] GetAllusers() {
            return base.Channel.GetAllusers();
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysUser[]> GetAllusersAsync() {
            return base.Channel.GetAllusersAsync();
        }
        
        public bool HasBoughtProduct(int UserID, int ProductID) {
            return base.Channel.HasBoughtProduct(UserID, ProductID);
        }
        
        public System.Threading.Tasks.Task<bool> HasBoughtProductAsync(int UserID, int ProductID) {
            return base.Channel.HasBoughtProductAsync(UserID, ProductID);
        }
        
        public FRONTEND.ServiceReference1.SysProduct[] GetMerchantProds(int MerchatID) {
            return base.Channel.GetMerchantProds(MerchatID);
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> GetMerchantProdsAsync(int MerchatID) {
            return base.Channel.GetMerchantProdsAsync(MerchatID);
        }
        
        public FRONTEND.ServiceReference1.SysProduct[] GetSortedProducts() {
            return base.Channel.GetSortedProducts();
        }
        
        public System.Threading.Tasks.Task<FRONTEND.ServiceReference1.SysProduct[]> GetSortedProductsAsync() {
            return base.Channel.GetSortedProductsAsync();
        }
    }
}
